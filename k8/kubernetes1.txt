write server.js
var http = require('http');

var handleRequest = function(request, response) {
  console.log('Received request for URL: ' + request.url);
  response.writeHead(200);
  response.end('Hello World!');
};
var www = http.createServer(handleRequest);
www.listen(8080);



write dockerfile

from node:18-alpine
expose 10000
copy server.js .
cmd ["node", "server.js"]


eval $(minikube docker-env)
docker build -t name .


kubernetes
kubectl create deployment hello-node1 --image=hello-node1
kubectl edit deployment hello-node1
kubectl get deployments
kubectl expose deployment hello-node1 --type=NodePort --port=10000
kubectl port-forward service/hello-node1 10000:10000

kubectl get nodes -o wide #for node ip

Monitor:
kubectl describe pod hello-node1
minikube dashboard
kubectl top pod
kubectl top node





#Prometheus
kubectl port-forward svc/prometheus-service 9090:9090 -n default

#Queries
up
rate(container_cpu_usage_seconds_total[1m])
container_memory_usage_bytes
rate(container_network_transmit_bytes_total[1m])




#Mongodb
systemctl start mongod
mongosh


const { MongoClient } = require("mongodb");

const uri = "mongodb://localhost:27017";
const client = new MongoClient(uri);

async function run() {
    try {
        await client.connect();
        const database = client.db("testDB");
        const collection = database.collection("users");
        const newUser = { name: "Aditya", email: "aditya@gmail.com", age: 21 };
        const result = await collection.insertOne(newUser);

        console.log(`Document inserted with ID: ${result.insertedId}`);
    } catch (error) {
        console.error("Error:", error);
    } finally {
        await client.close();
    }
}

run();

